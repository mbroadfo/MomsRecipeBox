# Docker Compose Override for Atlas (Remote DB) Mode
# Usage: docker-compose -f docker-compose.yml -f docker-compose.atlas.yml up -d

services:
  # App container configured for Atlas connection
  app-atlas:
    container_name: momsrecipebox-app-atlas
    build:
      context: .
      dockerfile: app/Dockerfile
    env_file:
      - config/current-profile.env
    entrypoint: [""]
    command: ["node", "app/local_server.js"]
    environment:
      # Atlas connection - use the URI from the profile env file
      # MONGODB_URI is already set in current-profile.env
      MONGODB_MODE: atlas
      APP_MODE: express
      NODE_ENV: ${NODE_ENV:-development}
      
      # AWS configuration for Atlas credentials
      AWS_REGION: ${AWS_REGION:-us-west-2}
      AWS_SECRET_NAME: ${AWS_SECRET_NAME:-moms-recipe-secrets-dev}
      RECIPE_IMAGES_BUCKET: ${RECIPE_IMAGES_BUCKET:-mrb-recipe-images-dev}
      MONGODB_DB_NAME: ${MONGODB_DB_NAME:-moms_recipe_box_dev}
      
      # AWS credentials from host environment
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      
      # Enhanced timeouts for cloud connections
      HEALTH_CHECK_TIMEOUT_MS: 15000
      MONGODB_CONNECT_TIMEOUT_MS: 10000
      
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  # Development utilities (can still be useful with Atlas)
  atlas-tools:
    image: mongo:latest
    container_name: momsrecipebox-atlas-tools
    environment:
      MONGODB_URI: ${MONGODB_ATLAS_URI}
    volumes:
      - ./scripts:/scripts
      - ./backups:/backups
    profiles:
      - tools
    command: tail -f /dev/null  # Keep container running for manual tools

# Note: No local MongoDB containers in Atlas mode
# This saves resources and avoids port conflicts