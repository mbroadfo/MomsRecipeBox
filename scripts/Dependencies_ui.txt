 imported from external module "
${clientPublicPath}
${DYNAMIC_MODULES_ID}
${dynamicImportHelperId}
${entry.name}
${externalId}
${HELPERS_ID}
${id$1}
${imported}
${importPath}
${isImport ? 
${isImport ? 'imports' : 'exports'}
${m.importPath}
${match}
${path.relative(process.cwd(), importer)}
${pluginConfigEntry.name}
${preloadHelperId}
${rawId}
${request}
${specifier}
${stmt.uri}
${target}
${url$6}
${url}
${wasmHelperId}
$comment
$ref
(!) Could not auto-determine entry point from rollupOptions or html files and there are no explicit optimizeDeps.include patterns. Skipping dependency pre-bundling.
([^
) ? `json${index}` : `{ __require as require${index} }`} from ${JSON.stringify(id)};`).join(
) return `No 
)` or `require(
* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted from being used by a pattern.
* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted from being used by a pattern. {{customMessage}}
* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted.
* import is invalid because '{{importNames}}' from '{{importSource}}' is restricted. {{customMessage}}
* import is invalid because import name matching '{{importNames}}' pattern from '{{importSource}}' is restricted from being used.
* import is invalid because import name matching '{{importNames}}' pattern from '{{importSource}}' is restricted from being used. {{customMessage}}
* import is invalid because only '{{allowedImportNames}}' from '{{importSource}}' is/are allowed.
* import is invalid because only '{{allowedImportNames}}' from '{{importSource}}' is/are allowed. {{customMessage}}
* import is invalid because only imports that match the pattern '{{allowedImportNamePattern}}' from '{{importSource}}' are allowed.
* import is invalid because only imports that match the pattern '{{allowedImportNamePattern}}' from '{{importSource}}' are allowed. {{customMessage}}
; /*error Expected space(s) after 
?commonjs-external
@ampproject/remapping
@babel/code-frame
@babel/compat-data/native-modules
@babel/compat-data/plugins
@babel/core
@babel/generator
@babel/helper-compilation-targets
@babel/helper-globals/data/builtin-lower.json
@babel/helper-globals/data/builtin-upper.json
@babel/helper-module-imports
@babel/helper-plugin-utils
@babel/helpers
@babel/helper-string-parser
@babel/helper-validator-identifier
@babel/helper-validator-option
@babel/parser
@babel/preset-typescript
@babel/preset-typescript/package.json
@babel/template
@babel/traverse
@babel/types
@eslint/config-array
@eslint/config-helpers
@eslint/core
@eslint/eslintrc
@eslint/eslintrc/universal
@eslint/js
@eslint/object-schema
@eslint/plugin-kit
@eslint-community/eslint-utils
@eslint-community/regexpp
@eslint-community/regexpp/ast
@eslint-community/regexpp/ecma-versions
@eslint-community/regexpp/parser
@eslint-community/regexpp/validator
@eslint-community/regexpp/visitor
@humanfs/core
@humanwhocodes/module-importer
@humanwhocodes/retry
@jridgewell/gen-mapping
@jridgewell/resolve-uri
@jridgewell/sourcemap-codec
@jridgewell/trace-mapping
@nodelib/fs.scandir
@nodelib/fs.stat
@nodelib/fs.walk
@rolldown/pluginutils
@std/assert
@std/path/is-glob
@std/path/posix/basename
@std/path/posix/common
@std/path/posix/dirname
@std/path/posix/extname
@std/path/posix/format
@std/path/posix/from-file-url
@std/path/posix/glob-to-regexp
@std/path/posix/is-absolute
@std/path/posix/join
@std/path/posix/join-globs
@std/path/posix/normalize
@std/path/posix/normalize-glob
@std/path/posix/parse
@std/path/posix/relative
@std/path/posix/resolve
@std/path/posix/to-file-url
@std/path/posix/to-namespaced-path
@std/path/windows/basename
@std/path/windows/common
@std/path/windows/dirname
@std/path/windows/extname
@std/path/windows/format
@std/path/windows/from-file-url
@std/path/windows/glob-to-regexp
@std/path/windows/is-absolute
@std/path/windows/join
@std/path/windows/join-globs
@std/path/windows/normalize
@std/path/windows/normalize-glob
@std/path/windows/parse
@std/path/windows/relative
@std/path/windows/resolve
@std/path/windows/to-file-url
@std/path/windows/to-namespaced-path
@typescript-eslint/eslint-plugin
@typescript-eslint/eslint-plugin/use-at-your-own-risk/raw-plugin
@typescript-eslint/parser
@typescript-eslint/project-service
@typescript-eslint/scope-manager
@typescript-eslint/tsconfig-utils
@typescript-eslint/types
@typescript-eslint/typescript-estree
@typescript-eslint/type-utils
@typescript-eslint/utils
@typescript-eslint/utils/ast-utils
@typescript-eslint/utils/eslint-utils
@typescript-eslint/utils/ts-eslint
@typescript-eslint/visitor-keys
@vitejs/plugin-react
[^
\nA PostCSS plugin did not pass the `from` option to `postcss.parse`. This may cause imported assets to be incorrectly transformed. If you've recently added a PostCSS plugin that raised this warning, please contact the package author to fix the issue.
']*(?<imports>[\p{L}\p{M}\w\t\n\r $*,/{}@.]+)from\s*)?[
__VITE_CSS_URL__${Buffer.from(id).toString(
_0_can_only_be_imported_by_using_import_1_require_2_or_a_default_import_2616
_0_can_only_be_imported_by_using_import_1_require_2_or_by_turning_on_the_esModuleInterop_flag_and_us_2617
`ReactDOMTestUtils.act` is deprecated in favor of `React.act`. Import `act` from `react` instead of `react-dom/test-utils`. See https://react.dev/warnings/react-dom-test-utils for more info.
'{{importName}}' import from '{{importSource}}' is restricted because only '{{allowedImportNames}}' import(s) is/are allowed.
'{{importName}}' import from '{{importSource}}' is restricted because only '{{allowedImportNames}}' import(s) is/are allowed. {{customMessage}}
'{{importName}}' import from '{{importSource}}' is restricted because only imports that match the pattern '{{allowedImportNamePattern}}' are allowed from '{{importSource}}'.
'{{importName}}' import from '{{importSource}}' is restricted because only imports that match the pattern '{{allowedImportNamePattern}}' are allowed from '{{importSource}}'. {{customMessage}}
'{{importName}}' import from '{{importSource}}' is restricted from being used by a pattern.
'{{importName}}' import from '{{importSource}}' is restricted from being used by a pattern. {{customMessage}}
'{{importName}}' import from '{{importSource}}' is restricted.
'{{importName}}' import from '{{importSource}}' is restricted. {{customMessage}}
'{{importSource}}' import is restricted from being used by a pattern.
'{{importSource}}' import is restricted from being used by a pattern. {{customMessage}}
'{{importSource}}' import is restricted from being used.
'{{importSource}}' import is restricted from being used. {{customMessage}}
+
A `require()` style import is forbidden.
â€¦
aac
accessor-pairs
acorn
acorn-jsx
Add_import_from_0_90057
ajv
ajv/lib/refs/json-schema-draft-04.json
Allow_default_imports_from_modules_with_no_default_export_This_does_not_affect_code_emit_just_typech_6011
Allow_import_x_from_y_when_a_module_doesn_t_have_a_default_export_6601
Allow_importing_helper_functions_from_tslib_once_per_project_instead_of_including_them_per_file_6639
ansi-styles
argparse
array-bracket-newline
array-bracket-spacing
array-callback-return
array-element-newline
arrow-body-style
arrow-parens
arrow-spacing
assert
assertClassBrand
async
async_hooks
auto
balanced-match
bar
base64
benchmark
block-scoped-var
block-spacing
brace-expansion
braces
brace-style
browserify
browserslist
buffer
bufferutil
callback-return
callsites
caniuse-lite/data/features/
caniuse-lite/data/regions/
caniuse-lite/dist/unpacker/agents
caniuse-lite/dist/unpacker/feature
caniuse-lite/dist/unpacker/region
Cannot import an ES6 module from CommonJS
Cannot remove imports from a future source file
capitalized-comments
chalk
checkInRHS
child_process
classApplyDescriptorDestructureSet
classApplyDescriptorGet
classApplyDescriptorSet
classCheckPrivateStaticFieldDescriptor
class-methods-use-this
classPrivateFieldGet2
color-convert
color-name
comma-dangle
comma-spacing
comma-style
concat-map
connect
consistent-return
consistent-this
constructor-super
convert-source-map
cross-spawn
crypto
csstype
debug
deep-is
default-case
default-case-last
default-param-last
Directory import '%s' is not supported 
Disallow invocation of `require()`
Disallow_import_s_require_s_or_reference_s_from_expanding_the_number_of_files_TypeScript_should_add__6672
dot
dot-location
dot-notation
electron-to-chromium/versions
enum
eol-last
eqeqeq
ERR_UNSUPPORTED_DIR_IMPORT
esbuild
escalade/sync
escape-string-regexp
eslint
eslint/config
eslint/lib/rules/no-restricted-imports
eslint/use-at-your-own-risk
eslint-plugin-react-hooks
eslint-plugin-react-refresh
eslint-scope
eslint-utils
eslint-visitor-keys
espree
esquery
esrecurse
estraverse
estree
esutils
events
expo-random
export=
exports
fast-deep-equal
fast-glob
fast-json-stable-stringify
fast-levenshtein
fastq
fdir
file://
file-entry-cache
fill-range
find-up
flat-cache
flatted
foo
for-direction
fs
fsevents
func-call-spacing
func-name-matching
func-names
func-style
function
function-paren-newline
generator-star-spacing
gensync
getPrototypeOf
getter-return
glob
global-require
globals
glob-parent
graphemer
grouped-accessor-pairs
guard-for-in
gulp
gulp-bump
gulp-eslint
gulp-filter
gulp-git
gulp-mocha
gulp-tag-version
handle-callback-err
has-flag
hello
http
https
id-blacklist
id-denylist
Identifier
id-length
id-match
if
ignore
implicit-arrow-linebreak
import
import * as foo from 'module';
import { parentPort, receiveMessageOnPort, workerData } from 'worker_threads'
import foo from 'module';
Import_0_from_1_90013
Import_assignment_cannot_be_used_when_targeting_ECMAScript_modules_Consider_using_import_Asterisk_as_1202
Import_emit_helpers_from_tslib_6139
Imported_via_0_from_file_1_1393
Imported_via_0_from_file_1_to_import_importHelpers_as_specified_in_compilerOptions_1395
Imported_via_0_from_file_1_to_import_jsx_and_jsxs_factory_functions_1397
Imported_via_0_from_file_1_with_packageId_2_1394
Imported_via_0_from_file_1_with_packageId_2_to_import_importHelpers_as_specified_in_compilerOptions_1396
Imported_via_0_from_file_1_with_packageId_2_to_import_jsx_and_jsxs_factory_functions_1398
import-fresh
imurmurhash
indent-legacy
init-declarations
inspector
isexe
is-extglob
is-glob
isNativeReflectConstruct
is-number
It appears a plugin has implemented a \
jiti/package.json
js-beautify
jsesc
json5
json-buffer
json-schema
json-schema-traverse
json-stable-stringify-without-jsonify
js-tokens
jsx-quotes
js-yaml
key-spacing
keyv
keyword-spacing
layer
less
levn
lightningcss
linebreak-style
line-comment-position
lines-around-comment
lines-around-directive
locate-path
lodash.merge
lru-cache
main
max-classes-per-file
max-depth
max-len
max-lines
max-lines-per-function
max-nested-callbacks
max-params
max-statements
max-statements-per-line
merge2
micromatch
minimatch
minimist
mkdirp
mod
module
Module_0_has_no_default_export_Did_you_mean_to_use_import_1_from_0_instead_2613
Module_0_has_no_exported_member_1_Did_you_mean_to_use_import_1_from_0_instead_2614
ms
multiline-comment-style
multiline-ternary
my-module.js
Named_imports_from_a_JSON_file_into_an_ECMAScript_module_are_not_allowed_when_module_is_set_to_0_1544
namespace
nanoid
nanoid/async
nanoid/format
nanoid/non-secure
natural-compare
neo-async
neostandard
net
new-cap
newFile
newline-after-var
newline-before-return
newline-per-chained-call
new-parens
no-alert
no-array-constructor
no-await-in-loop
no-bitwise
no-buffer-constructor
no-caller
no-case-declarations
no-catch-shadow
no-class-assign
no-compare-neg-zero
no-cond-assign
no-confusing-arrow
no-console
no-constant-condition
no-const-assign
no-constructor-return
no-continue
no-control-regex
node
node:assert
node:buffer
node:child_process
node:crypto
node:dns
node:events
node:fs
node:fs/promises
node:http
node:http2
node:https
node:module
node:net
node:os
node:path
node:perf_hooks
node:process
node:querystring
node:readline
node:stream
node:tls
node:url
node:util
node:v8
node:worker_threads
node:zlib
no-debugger
no-delete-var
node-releases/data/processed/envs.json
node-releases/data/release-schedule/release-schedule.json
no-div-regex
no-dupe-args
no-dupe-class-members
no-dupe-else-if
no-dupe-keys
no-duplicate-case
no-duplicate-imports
no-else-return
no-empty
no-empty-character-class
no-empty-function
no-empty-pattern
no-empty-static-block
no-eq-null
no-eval
no-ex-assign
no-extend-native
no-extra-bind
no-extra-boolean-cast
no-extra-label
no-extra-parens
no-extra-semi
no-fallthrough
no-floating-decimal
no-func-assign
no-global-assign
no-implicit-coercion
no-implicit-globals
no-implied-eval
no-import-assign
no-inline-comments
no-inner-declarations
no-invalid-regexp
no-invalid-this
no-irregular-whitespace
no-iterator
no-labels
no-label-var
no-lone-blocks
no-lonely-if
no-loop-func
no-loss-of-precision
no-magic-numbers
no-mixed-operators
no-mixed-requires
no-mixed-spaces-and-tabs
no-multi-assign
no-multiple-empty-lines
no-multi-spaces
no-multi-str
no-native-reassign
no-negated-condition
no-negated-in-lhs
no-nested-ternary
no-new
no-new-func
no-new-object
no-new-require
no-new-symbol
no-new-wrappers
no-obj-calls
no-object-constructor
no-octal
no-octal-escape
no-param-reassign
no-path-concat
no-plusplus
no-process-env
no-process-exit
no-proto
no-prototype-builtins
no-redeclare
no-regex-spaces
no-restricted-exports
no-restricted-globals
no-restricted-imports
no-restricted-modules
no-restricted-properties
no-restricted-syntax
no-return-assign
no-return-await
no-script-url
no-self-assign
no-self-compare
no-sequences
no-setter-return
no-shadow
no-spaced-func
no-sparse-arrays
no-sync
no-tabs
no-ternary
no-this-before-super
no-throw-literal
no-trailing-spaces
no-unassigned-vars
no-undef
no-undefined
no-undef-init
no-underscore-dangle
no-unexpected-multiline
no-unneeded-ternary
no-unreachable
no-unreachable-loop
no-unsafe-finally
no-unsafe-negation
no-unused-expressions
no-unused-labels
no-unused-vars
no-use-before-define
no-useless-assignment
no-useless-backreference
no-useless-call
no-useless-catch
no-useless-computed-key
no-useless-concat
no-useless-constructor
no-useless-escape
no-useless-rename
no-useless-return
no-var
no-void
no-warning-comments
no-with
object
object-curly-newline
object-curly-spacing
object-property-newline
object-shorthand
one-var
Only `import defer * as x from "./module"` is valid.
Only `import module x from "./module"` is valid.
Only `import source x from "./module"` is valid.
operator-assignment
operator-linebreak
optionator
os
other-module
package.json
padded-blocks
parent-module
parse5
path
path-exists
path-key
Patterns of import paths to allow requiring from.
perf_hooks
picocolors
picomatch
picomatch/lib/utils
p-limit
p-locate
pnpapi
possibleConstructorReturn
postcss
prefer-arrow-callback
prefer-const
prefer-destructuring
prefer-numeric-literals
prefer-object-has-own
prefer-object-spread
prefer-reflect
prefer-regex-literals
prefer-rest-params
prefer-spread
prefer-template
prelude-ls
process
prop-types
punycode
queue-microtask
quote-props
react
react/canary
react/experimental
react-devtools-core
react-dom
react-dom/canary
react-dom/experimental
readline
remote imports cannot import from a local location.
Remove_import_from_0_90005
Remove_type_from_import_declaration_from_0_90055
Remove_type_from_import_of_0_from_1_90056
repl
Require `require()` calls to be placed at top-level module scope
require(
require-atomic-updates
require-await
require-unicode-regexp
require-yield
resolve
resolve-from
rest-spread-spacing
return require(path);
reusify
rimraf
rollup
rollup/parseAst
rule
run-parallel
sass
sass-embedded
scheduler
semi
semi-spacing
semi-style
semver
serve
setFunctionName
shebang-command
shebang-regex
sort-imports
sort-keys
sort-vars
source-map-js
source-map-support
space-before-blocks
spaced-comment
space-infix-ops
space-in-parens
space-unary-ops
Specify_the_module_specifier_to_be_used_to_import_the_jsx_and_jsxs_factory_functions_from_eg_react_6238
stream
string
strip-json-comments
stylus
sugarss
supports-color
switch-colon-spacing
symbol-description
t do anything like `import type {type T} from 
tap
tape
template-curly-spacing
template-tag-spacing
terser
This API has been removed. If you're looking for this 
tinyglobby
tls
toArray
toPropertyKey
to-regex-range
ts-api-utils
tty
Type_import_of_an_ECMAScript_module_from_a_CommonJS_module_must_have_a_resolution_mode_attribute_1542
Type_only_import_of_an_ECMAScript_module_from_a_CommonJS_module_must_have_a_resolution_mode_attribut_1541
type-check
typescript
typescript/lib/tsserverlibrary
typescript-eslint
u
uglify-js
undefined
Unexpected require().
unicode-bom
unknown
Update_import_from_0_90058
update-browserslist-db
uri-js
url
use-isnan
utf-8-validate
util
util.promisify
v8
valid-typeof
var async = require('async');
var fs = require('fs');
var utils = require('./utils');
var x = require();
var x = require(42);
var x = require('diagnose')('sub-module');
var x = require('glob').Glob;
var x = require('util');
vars-on-top
vite
vite/module-runner
which
with
with-legacy
word-wrap
worker_threads
wrap-iife
wrap-regex
ws
x
yallist
yield-star-spacing
yocto-queue
zlib
